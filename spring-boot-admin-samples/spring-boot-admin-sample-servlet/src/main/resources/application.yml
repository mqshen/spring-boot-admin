---
info:
  scm-url: "@scm.url@"
  build-url: "https://travis-ci.org/codecentric/spring-boot-admin"

logging:
  file:
    name: "target/boot-admin-sample-servlet.log"
  pattern:
    file: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS


spring:
  application:
    name: spring-boot-admin-sample-servlet
  profiles:
    active:
      - insecure
  boot:
    admin:
      client:
        url: http://localhost:8080
        instance:
          metadata:
            tags:
              environment: test
  jmx:
    enabled: true
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://101.251.195.186:3306/ifp_risk?characterEncoding=UTF-8&autoReconnect=true&useSSL=false
    username: smartlife
    password: belink!@#
    driverClassName: com.mysql.jdbc.Driver
    testWhileIdle: true
    validationQuery: SELECT 1
    hikari:
      connection-timeout: 60000
      maximum-pool-size: 5
    jpa:
      show-sql: true
      hibernate:
        ddl-auto: none
        naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
          hibernate:
            dialect: org.hibernate.dialect.MySQL5Dialect
---

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health
    metadata-map:
      management:
        context-path: ${server.servlet.context-path}/actuator
      startup: ${random.int}    #needed to trigger info and endpoint update after restart
  client:
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761}/eureka/
# tag::customization-external-views[]
spring:
  boot:
    admin:
      ui:
        external-views:
          - label: "ðŸš€"
            url: http://codecentric.de
            order: 2000
# end::customization-external-views[]

---
spring:
  profiles: dev
  boot:
    admin:
      ui:
        cache:
          no-cache: true
        template-location: file:@project.basedir@/../../spring-boot-admin-server-ui/target/dist/
        resource-locations: file:@project.basedir@/../../spring-boot-admin-server-ui/target/dist/
        cache-templates: false
        extension-resource-locations: file:@project.basedir@/../spring-boot-admin-sample-custom-ui/target/dist/

---
spring:
  profiles: insecure

info.tags.security: insecure


